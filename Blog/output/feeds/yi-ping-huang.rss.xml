<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Some kind of notepad for myself...details about coding/physics/linux</title><link>/</link><description></description><atom:link href="/feeds/yi-ping-huang.rss.xml" rel="self"></atom:link><lastBuildDate>Fri, 28 Nov 2014 00:00:00 +0000</lastBuildDate><item><title>Permutation(1)</title><link>/Permutation%20algorithm%201%20in%20TAOCP%20vol.4.html</link><description>&lt;p&gt;&lt;strong&gt;Reference:&lt;/strong&gt; &lt;a href="A book about classical computer science.html"&gt;TAOCP&lt;/a&gt; vol.4&lt;/p&gt;
&lt;p&gt;The idea is &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First generate &lt;span class="math"&gt;\((n-1)!\)&lt;/span&gt; permutation of the &lt;span class="math"&gt;\(n-1\)&lt;/span&gt; elements. And arrange
permutations as a row where the adjacent permutations are related by one
adjacent transposition.
&lt;span class="math"&gt;\(123\quad 132\quad 312\quad 321\quad 231\quad 213\)&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For each permutation, the element of row, we put the &lt;span class="math"&gt;\(n\)&lt;/span&gt;-th element in every
possible position from the end and generate a column.
&lt;div class="math"&gt;\begin{array}{cccc}
\mathbf{123\underline{4}} &amp;amp;\mathbf{132\underline{4}} &amp;amp;\mathbf{312\underline{4}} &amp;amp;...\\
12\underline{4}3 &amp;amp;13\underline{4}2 &amp;amp;31\underline{4}2 &amp;amp;...\\
1\underline{4}23 &amp;amp;1\underline{4}32 &amp;amp;3\underline{4}12 &amp;amp;...\\
\mathbf{\underline{4}123} &amp;amp;\mathbf{\underline{4}132}
&amp;amp;\mathbf{\underline{4}312} &amp;amp;...
\end{array}&lt;/div&gt;
Within each column, adjacent permutations are also related by one adjacent transposition.
Thus we form a grid of square lattice that each site is related to its
nearest-neighbor by one transposition. However, not all transposition are
adjacent transposition, only the elements on the top and bottom rows are related
by adjacent transposition between columns. We can
transverse all permutations by adjacent transpositions by following scheme:
First transverse first column by performing adjacent transpositions
successively. Then, go to the second column horizontally by one adjacent
transposition. By performing successive adjacent transpositions, we will reach the top row
of the second column. Again we can go to the third column horizontally by one
adjacent transposition. Continue this process, we are able to transverse all
permutations with adjacent transpositions only!!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }
    
    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript'; 
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yi-Ping Huang</dc:creator><pubDate>Fri, 28 Nov 2014 00:00:00 +0000</pubDate><guid>tag:,2014-11-28:Permutation algorithm 1 in TAOCP vol.4.html</guid><category>Algorithm</category></item><item><title>Git- the version control tool</title><link>/git-tutorial-1.html</link><description>&lt;p&gt;We can use&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git branch&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;to check how many branches in the local directory.&lt;/p&gt;
&lt;p&gt;To branch out,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git branch new_branch_name&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;will create a new branch according to the current master branch.&lt;/p&gt;
&lt;p&gt;To merge the new branch with the master branch&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git merge new_branch_name&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To remove a remote branch&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git push name_of_remote :branch_to_be_removed&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To remove local branch&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git branch -d name_of_branch&lt;/p&gt;
&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yi-Ping Huang</dc:creator><pubDate>Wed, 25 Jun 2014 00:00:00 +0000</pubDate><guid>tag:,2014-06-25:git-tutorial-1.html</guid><category>git</category></item><item><title>Add super user account in Ubuntu</title><link>/Root%20Ubuntu.html</link><description>&lt;p&gt;Sometimes sudo might be hard to understand for me&amp;hellip; su is an easier way for me
to understand what I am doing&amp;hellip;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo passwd root&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then, su is ready for using.&lt;/p&gt;
&lt;p&gt;I encounter this problem since I don&amp;rsquo;t know where to set the variables for root.
And using sudo is always confusing since its .bashrc file is obviously not the
one for the user. When I try to build openmpi library by intel compiler, sudo
cannot use the right variables. In order to install it under /opt with the right
permission, setting up a su account is the most easy way that came to my mind&amp;hellip;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yi-Ping Huang</dc:creator><pubDate>Mon, 23 Jun 2014 00:00:00 +0000</pubDate><guid>tag:,2014-06-23:Root Ubuntu.html</guid><category>Ubuntu-14.04</category><category>Linux</category></item><item><title>The mist of $U(1)$ symmetry breaking of BEC</title><link>/SSB%20of%20BEC.html</link><description>&lt;p&gt;From statistical course, we learned the most basic version of BEC, the
case for non-interacting bosons. After more reading, we learn the
theory of spontaneous symmetry breaking in magnetic system. For me, the problem
that always occupied my mind is what is the corresponding &amp;ldquo;magnetic field&amp;rdquo; which
break the &lt;span class="math"&gt;\(O(3)\)&lt;/span&gt; rotation symmetry for ideal Heisenberg ferromagnet in BEC that
breaks the &lt;span class="math"&gt;\(U(1)\)&lt;/span&gt; particle number conservation?&lt;/p&gt;
&lt;p&gt;The part that really confuse me is what exactly &lt;em&gt;spontaneously broken &lt;span class="math"&gt;\(U(1)\)&lt;/span&gt;
gauge symmetry&lt;/em&gt; means? First, my understanding about gauge structure is it is
not a physical symmetry, it is the redundancy of description for our theory.
The definition of gauge transformation defines what descriptions are physically
equivalent. So in general, gauge symmetry can never be broken. Second, in the
experiments, we don&amp;rsquo;t really have the ability to break particle number
conservation. We can never kill/create an atom in the trap. The notion of
particle number conservation is broken always sounds dubious for me.&lt;/p&gt;
&lt;p&gt;After, reading proffessor Leggett&amp;rsquo;s book. My pain is eased a little bit. I think
the reason I am so confused for so long is a problem of &lt;em&gt;what is the proper
definition of BEC?&lt;/em&gt; It seems it is a problem that takes lots of physicists to
think about. Proffessor Leggett&amp;rsquo;s attitude about the definition of BEC is&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The definition should connect to experimental reality. The finite size of experimental system, particles cannot be create from nowhere or die for no reason.&lt;/li&gt;
&lt;li&gt;The definition should be able to generalize to multicomponent BECs.&lt;/li&gt;
&lt;li&gt;Create no pseudo problems.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Professor Leggett prefer the definition by &lt;em&gt;single-particle density matrix&lt;/em&gt;,
&lt;span class="math"&gt;\(\rho(r,r':t)\)&lt;/span&gt;. &lt;span class="math"&gt;\(\rho(r,r':t)\)&lt;/span&gt; is Hermitian and thus can be diagonalized. If
only one eigenvalue domintates, then we got a simple BEC.&lt;/p&gt;
&lt;p&gt;Unfortunately, I am confused because my old understanding rely on the definition
of BEC that would automatically generates some pseudo problems. Defining the
order parameter as &lt;span class="math"&gt;\(\langle\phi \rangle\)&lt;/span&gt; is really confusing in that sense.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }
    
    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript'; 
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yi-Ping Huang</dc:creator><pubDate>Sat, 14 Jun 2014 00:00:00 +0000</pubDate><guid>tag:,2014-06-14:SSB of BEC.html</guid><category>Physics</category><category>Books</category></item><item><title>Permutation(0)</title><link>/Introduction%20of%20permutation%20in%20TAOCP%20vol.1.html</link><description>&lt;p&gt;&lt;strong&gt;Reference:&lt;/strong&gt; &lt;a href="A book about classical computer science.html"&gt;TAOCP&lt;/a&gt; vol.1&lt;/p&gt;
&lt;p&gt;Permutation is a fundamental concepts in combinatorics. Assume we have a multi
set, &lt;span class="math"&gt;\(\\{ a_{1,1},...a_{1,n_1},a_{2,1},...a_{2,n_2},...a_{N,n_1},...a_{N,n_N} \\}\)&lt;/span&gt;,
the total number of different ways to arrange them is &lt;span class="math"&gt;\(\frac{(\sum n_i)!}{\prod
n_i !}\)&lt;/span&gt;. We will focus on the case &lt;span class="math"&gt;\(n_i=1\)&lt;/span&gt; which is the case of &lt;span class="math"&gt;\(N\)&lt;/span&gt; distinct
objects. And the number of ways to arrange them is &lt;span class="math"&gt;\(N!\)&lt;/span&gt;. Later we use perms to
stands for the word permutations.&lt;/p&gt;
&lt;p&gt;Perms have several different representations.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linear representation&lt;/li&gt;
&lt;li&gt;Cyclic representation&lt;/li&gt;
&lt;li&gt;Canonical representation&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="linear-representation"&gt;Linear representation&lt;/h2&gt;
&lt;p&gt;Perm can be considered as a &lt;em&gt;rearrangement&lt;/em&gt; or &lt;em&gt;renaming&lt;/em&gt; of a series of
objects. Suppose we put five objects &lt;span class="math"&gt;\(a,b,c,d\)&lt;/span&gt; in a straight line. And the perms
which change the ordering into &lt;span class="math"&gt;\(b,a,d,c\)&lt;/span&gt; can be denoted as
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation}
\left(
\begin{array}{cccc}
a &amp;amp;b &amp;amp;c &amp;amp;d\\
b &amp;amp;a &amp;amp;d &amp;amp;c
\end{array}
\right)\equiv
\left(
\begin{array}{cccc}
b &amp;amp;a &amp;amp;c &amp;amp;d\\
a &amp;amp;b &amp;amp;d &amp;amp;c
\end{array}
\right)\text{.}
\end{equation}&lt;/div&gt;
&lt;p&gt;Note, the expression for linear representation is not unique as we show in the
above equation.&lt;/p&gt;
&lt;h2 id="cyclic-representation"&gt;Cyclic representation&lt;/h2&gt;
&lt;p&gt;Cyclic representation represents the perms by breaking perms down into closed
cycles. The previous example will be represented by &lt;span class="math"&gt;\((a b)(c d)\)&lt;/span&gt;. Also, this
representation is not unique &lt;span class="math"&gt;\((a b)(c d)\equiv(b a)(c d)\)&lt;/span&gt;. For the object,
&lt;span class="math"&gt;\(e\)&lt;/span&gt;, that do not change position is denoted by singleton &lt;span class="math"&gt;\((e)\)&lt;/span&gt;. It is usually
omitted in cyclic representation.&lt;/p&gt;
&lt;h2 id="canonical-representation"&gt;Canonical representation&lt;/h2&gt;
&lt;p&gt;The canonical representation can be constructed by following steps.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write all singleton cycles explicitly.&lt;/li&gt;
&lt;li&gt;Within each cycle put the &lt;em&gt;smallest&lt;/em&gt; number &lt;em&gt;first&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Order the cycles in &lt;em&gt;decreasing&lt;/em&gt; order of the &lt;em&gt;first&lt;/em&gt; number in cycles&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is a faithful representation of perms since it modified the cyclic
representation by ordering the representation within each cycle and between
different cycles(That&amp;rsquo;s why singleton should be included in the representation).&lt;/p&gt;
&lt;p&gt;It can also be a faithful representation if in the last step we order the cycles
in &lt;strong&gt;increasing&lt;/strong&gt; order of the &lt;em&gt;first&lt;/em&gt; number. The reason we use asymmetric
scheme in second and third step is because the cyclic structure can be encoded
in the series in an elegant way. It is better described by following example.&lt;/p&gt;
&lt;h3 id="example"&gt;Example&lt;/h3&gt;
&lt;p&gt;Suppose we have a perm in cyclic representation &lt;span class="math"&gt;\((3 1 6)(5 4)\)&lt;/span&gt;. Following the
steps above&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\((3 1 6)(5 4)(2)\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\((1 6 3)(4 5)(2)\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\((4 5)(2)(1 6 3)\)&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;The parenthesis &lt;em&gt;can be removed&lt;/em&gt; without causing any ambiguity.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class="math"&gt;\(452163\)&lt;/span&gt; can be restored by inserting &lt;span class="math"&gt;\(|\)&lt;/span&gt; before &lt;em&gt;left to right&lt;/em&gt;
minimum by following steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4 is the minimum of 4, insert &lt;span class="math"&gt;\(|\)&lt;/span&gt; before 4.&lt;/li&gt;
&lt;li&gt;5 is not minimum of 45, do nothing.&lt;/li&gt;
&lt;li&gt;2 is the minimum of 452, insert &lt;span class="math"&gt;\(|\)&lt;/span&gt; before 2.&lt;/li&gt;
&lt;li&gt;1 is the minimum of 4521, insert &lt;span class="math"&gt;\(|\)&lt;/span&gt; before 1.&lt;/li&gt;
&lt;li&gt;6 is not minimum of 45216, do nothing.&lt;/li&gt;
&lt;li&gt;3 is not minimum of 452163, do nothing.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will get &lt;span class="math"&gt;\(|45|2|163\)&lt;/span&gt;, which is exactly the canonical representation.&lt;/p&gt;
&lt;p&gt;The canonical representation has several advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It is canonical.&lt;/li&gt;
&lt;li&gt;The representation can be implement into computer with less ambiguity.&lt;/li&gt;
&lt;li&gt;The structure of perms can be reformulate into the structure of the &lt;em&gt;left to right minimum&lt;/em&gt; of the sequence.&lt;/li&gt;
&lt;/ul&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }
    
    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript'; 
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yi-Ping Huang</dc:creator><pubDate>Sun, 01 Jun 2014 00:00:00 +0000</pubDate><guid>tag:,2014-06-01:Introduction of permutation in TAOCP vol.1.html</guid><category>Algorithm</category></item><item><title>The Art Of Computer Programming(TAOCP)</title><link>/A%20book%20about%20classical%20computer%20science.html</link><description>&lt;p&gt;The classical books,
&lt;a href="http://en.wikipedia.org/wiki/The_Art_of_Computer_Programming"&gt;TAOCP&lt;/a&gt;, written
by professor Knuth. As a graduate student in physics, I don&amp;rsquo;t have solid
background on computer science. However, after reading the first volume, I am
astonishing about this classic four volumes set. The book is written in a fashion
that it elaborates the idea behind each algorithm in an elegant way such that
even for a non-computer-science major student like me can enjoy the journey of
knowing classical computer science. It is a pity that I did not know these books
as an undergraduate student.&lt;/p&gt;
&lt;p&gt;The part that I enjoy most as I read the first volume is the introduction to the
idea of basic algorithm and the simple example to introduce the analysis of
algorithm. The point I learned is that the analysis of algorithm is basically a
problem of discrete math. In this simple example, professor Knuth shown how
statistical mathematics and generating function helps us to understand
a simple algorithm.&lt;/p&gt;
&lt;p&gt;The book is written in a style that the statement is so precise and convey the
essential ideas so effective that understanding how the problem is solved is
really a pleasure.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yi-Ping Huang</dc:creator><pubDate>Sat, 31 May 2014 00:00:00 +0000</pubDate><guid>tag:,2014-05-31:A book about classical computer science.html</guid><category>Books</category><category>Coding</category></item></channel></rss>